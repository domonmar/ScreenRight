name: Build macOS Universal App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build .app with Universal2 binary and drag-drop Info.plist
        run: |
          pyinstaller \
            --windowed \
            --name "ScreenRight" \
            --icon=ScreenRight.icns \
            --target-arch universal2 \
            --noconfirm \
            --clean \
            --osx-bundle-identifier "com.screenright.app" \
            screen_right.py

          # Add drag-and-drop support by modifying Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes array" dist/ScreenRight.app/Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0 dict" dist/ScreenRight.app/Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeExtensions array" dist/ScreenRight.app/Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeExtensions:0 string doc" dist/ScreenRight.app/Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeExtensions:1 string docx" dist/ScreenRight.app/Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeName string Word Document" dist/ScreenRight.app/Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:CFBundleTypeRole string Viewer" dist/ScreenRight.app/Contents/Info.plist
          /usr/libexec/PlistBuddy -c "Add :CFBundleDocumentTypes:0:LSHandlerRank string Owner" dist/ScreenRight.app/Contents/Info.plist

      - name: Verify .app structure and binary
        run: |
          if [ ! -d "dist/ScreenRight.app" ]; then
            echo "Error: ScreenRight.app not found!"
            exit 1
          fi

          echo "Binary architectures:"
          lipo -archs "dist/ScreenRight.app/Contents/MacOS/ScreenRight"

          if ! lipo -archs "dist/ScreenRight.app/Contents/MacOS/ScreenRight" | grep -q "x86_64 arm64"; then
            echo "Error: Binary is not universal!"
            exit 1
          fi

      - name: Create DMG
        run: |
          hdiutil create -volname "ScreenRight" \
            -srcfolder "dist/ScreenRight.app" \
            -ov -format UDZO "dist/ScreenRight.dmg"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Mac-App-Build
          path: |
            dist/ScreenRight.app
            dist/ScreenRight.dmg
