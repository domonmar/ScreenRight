name: Build macOS Universal App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller>=5.0  # Standard PyInstaller now supports universal2
          # Add your actual requirements here
          # pip install -r requirements.txt

      - name: Build Universal 2 .app with PyInstaller
        run: |
          pyinstaller \
            --windowed \
            --name "ScreenRight" \
            --icon=ScreenRight.icns \
            --target-arch universal2 \
            --noconfirm \
            --clean \
            --osx-bundle-identifier "com.screenright.app" \
            screen_right.py

      - name: Verify .app structure
        run: |
          if [ ! -d "dist/ScreenRight.app" ]; then
            echo "Error: ScreenRight.app not found!"
            exit 1
          fi
          
          # More thorough verification
          echo "App contents:"
          find dist/ScreenRight.app -type f
          
          echo "Binary architectures:"
          lipo -archs "dist/ScreenRight.app/Contents/MacOS/ScreenRight"
          
          if ! lipo -archs "dist/ScreenRight.app/Contents/MacOS/ScreenRight" | grep -q "x86_64 arm64"; then
            echo "Error: Binary is not universal!"
            exit 1
          fi

      - name: Create DMG
        run: |
          hdiutil create -volname "ScreenRight" \
            -srcfolder "dist/ScreenRight.app" \
            -ov -format UDZO "dist/ScreenRight.dmg"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Mac-App-Build
          path: |
            dist/ScreenRight.app
            dist/ScreenRight.dmg
